#!/usr/bin/env python3

# AI Disclaimer:
# This code was generated by a LLM.

def print_truecolor_gradient():
    # Gradients with fixed red component
    for b in range(0, 256, 4):
        print(f"\033[48;2;0;0;{b}m \033[0m", end="")
    print()
    
    for b in range(0, 256, 4):
        print(f"\033[48;2;255;0;{b}m \033[0m", end="")
    print()
    
    for g in range(0, 256, 4):
        print(f"\033[48;2;0;{g};0m \033[0m", end="")
    print()
    
    for g in range(0, 256, 4):
        print(f"\033[48;2;255;{g};0m \033[0m", end="")
    print()
    
    for r in range(0, 256, 4):
        print(f"\033[48;2;{r};0;0m \033[0m", end="")
    print()
    
    for r in range(0, 256, 4):
        print(f"\033[48;2;{r};255;0m \033[0m", end="")
    print()
    
    # Gradients with fixed green component
    for b in range(0, 256, 4):
        print(f"\033[48;2;0;255;{b}m \033[0m", end="")
    print()
    
    for b in range(0, 256, 4):
        print(f"\033[48;2;255;255;{b}m \033[0m", end="")
    print()
    
    for r in range(0, 256, 4):
        print(f"\033[48;2;{r};0;255m \033[0m", end="")
    print()
    
    for r in range(0, 256, 4):
        print(f"\033[48;2;{r};255;255m \033[0m", end="")
    print()
    
    for g in range(0, 256, 4):
        print(f"\033[48;2;0;{g};255m \033[0m", end="")
    print()
    
    for g in range(0, 256, 4):
        print(f"\033[48;2;255;{g};255m \033[0m", end="")
    print()

if __name__ == "__main__":
    print_truecolor_gradient()